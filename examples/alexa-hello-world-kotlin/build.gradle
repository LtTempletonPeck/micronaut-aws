plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "jp.classmethod.aws.lambda" version "0.38"
    id "org.jetbrains.kotlin.jvm" version "1.3.20"
    id "org.jetbrains.kotlin.kapt" version "1.3.20"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.20"
}



version "0.1"
group "com.amazon.ask.helloworld.handlers"

repositories {
    mavenLocal()
    jcenter()
    maven { url "https://dl.bintray.com/micronaut/core-releases-local" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.0.4'
    }
}

configurations {
	// for dependencies that are needed for development only
	developmentOnly 
}

dependencies {
    implementation "io.micronaut.aws:micronaut-function-aws-alexa:1.1.0.M2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "io.micronaut:micronaut-runtime"
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest "io.micronaut:micronaut-inject-java"
    runtime "com.amazonaws:aws-lambda-java-log4j2:1.0.0"
    runtime "org.apache.logging.log4j:log4j-slf4j-impl:2.9.1"
    runtime "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.0"
    testImplementation "io.micronaut.test:micronaut-test-junit5:1.0.2"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.3.0"

}

shadowJar {
    mergeServiceFiles()
}

test.classpath += configurations.developmentOnly
shadowJar {
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}

if (new File("${System.getProperty("user.home")}/.aws/credentials").exists()) {
    task deploy(type: jp.classmethod.aws.gradle.lambda.AWSLambdaMigrateFunctionTask, dependsOn: shadowJar) {
        functionName = "alexa-hello-world-kotlin"
        handler = "io.micronaut.function.aws.MicronautRequestStreamHandler"
        role = "arn:aws:iam::${aws.accountId}:role/lambda_basic_execution"
        runtime = com.amazonaws.services.lambda.model.Runtime.Java8
        zipFile = shadowJar.archivePath
        memorySize = 256
        timeout = 60
    }
}

test {
    useJUnitPlatform()
}

allOpen {
	annotation("io.micronaut.aop.Around")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    javaParameters = true 
	}
}
